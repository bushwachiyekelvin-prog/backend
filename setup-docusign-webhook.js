import { config } from 'dotenv';

// Load environment variables
config({ path: '.env.local' });
config({ path: '.env' });

console.log('üîß DocuSign Webhook Setup Guide\n');

const APP_URL = process.env.APP_URL || 'http://localhost:3000';
const WEBHOOK_URL = `${APP_URL}/webhooks/docusign`;

console.log('üìã Webhook Configuration:');
console.log(`   App URL: ${APP_URL}`);
console.log(`   Webhook URL: ${WEBHOOK_URL}`);
console.log('');

console.log('üöÄ Step-by-Step Setup Instructions:\n');

console.log('1Ô∏è‚É£  Set up a public URL (if testing locally):');
console.log('   Option A - Using ngrok:');
console.log('     ‚Ä¢ Install ngrok: https://ngrok.com/download');
console.log('     ‚Ä¢ Run: ngrok http 3000');
console.log('     ‚Ä¢ Copy the HTTPS URL (e.g., https://abc123.ngrok.io)');
console.log('     ‚Ä¢ Update your webhook URL to: https://abc123.ngrok.io/webhooks/docusign');
console.log('');

console.log('   Option B - Deploy to a server:');
console.log('     ‚Ä¢ Deploy your app to Heroku, Railway, or similar');
console.log('     ‚Ä¢ Use your production URL');
console.log('');

console.log('2Ô∏è‚É£  Configure DocuSign Connect:');
console.log('   a) Go to DocuSign Admin Console: https://admin.docusign.com');
console.log('   b) Navigate to: Integrations ‚Üí Connect');
console.log('   c) Click "Add Configuration"');
console.log('   d) Fill in the details:');
console.log(`      ‚Ä¢ Name: Melanin Kapital Webhook`);
console.log(`      ‚Ä¢ URL: ${WEBHOOK_URL}`);
console.log(`      ‚Ä¢ Logging Level: Information`);
console.log('   e) Select events to monitor:');
console.log('      ‚úÖ Envelope Sent');
console.log('      ‚úÖ Envelope Delivered');
console.log('      ‚úÖ Envelope Completed');
console.log('      ‚úÖ Envelope Declined');
console.log('      ‚úÖ Envelope Voided');
console.log('   f) Authentication: None (for now)');
console.log('   g) Save the configuration');
console.log('');

console.log('3Ô∏è‚É£  Test the webhook:');
console.log('   ‚Ä¢ Run: bun test-webhook.js');
console.log('   ‚Ä¢ Or manually trigger events in DocuSign');
console.log('   ‚Ä¢ Check your server logs for webhook events');
console.log('');

console.log('4Ô∏è‚É£  Monitor webhook events:');
console.log('   ‚Ä¢ DocuSign Connect will send HTTP POST requests to your webhook URL');
console.log('   ‚Ä¢ Your server will process these events and update offer letter status');
console.log('   ‚Ä¢ Check the audit trail in your database for status updates');
console.log('');

console.log('üîç Troubleshooting:');
console.log('   ‚Ä¢ Make sure your server is running and accessible');
console.log('   ‚Ä¢ Check server logs for webhook processing errors');
console.log('   ‚Ä¢ Verify the webhook URL is correct in DocuSign Connect');
console.log('   ‚Ä¢ Test with the health endpoint: GET /webhooks/health');
console.log('');

console.log('üìö Webhook Event Types:');
console.log('   ‚Ä¢ envelope-sent: Offer letter was sent to recipient');
console.log('   ‚Ä¢ envelope-delivered: Recipient received the email');
console.log('   ‚Ä¢ envelope-completed: Recipient signed the document');
console.log('   ‚Ä¢ envelope-declined: Recipient declined to sign');
console.log('   ‚Ä¢ envelope-voided: Document was voided/cancelled');
console.log('');

console.log('üéØ Expected Behavior:');
console.log('   ‚Ä¢ When envelope is completed ‚Üí offer letter status = "signed"');
console.log('   ‚Ä¢ When envelope is declined ‚Üí offer letter status = "declined"');
console.log('   ‚Ä¢ Loan application status will also be updated accordingly');
console.log('   ‚Ä¢ Audit trail entries will be created for all status changes');
console.log('');

console.log('Ready to set up your webhook! üöÄ');
